<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--（1）配置数据库-->
    <!--加载数据库连接配置-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--c3po最重要的api-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--&lt;!&ndash;c3po连接处私有属性&ndash;&gt;-->
        <!--&lt;!&ndash;最大连接数&ndash;&gt;-->
        <!--<property name="maxPoolSize" value="${maxPoolSize}"/>-->
        <!--&lt;!&ndash;最小连接数&ndash;&gt;-->
        <!--<property name="minPoolSize" value="${minPoolSize}"/>-->
        <!--&lt;!&ndash;关闭连接后不自动commint&ndash;&gt;-->
        <!--<property name="autoCommitOnClose" value="false"/>-->
        <!--&lt;!&ndash;表示当连接数到达最大时，超时时间&ndash;&gt;-->
        <!--<property name="checkoutTimeout" value="1000"/>-->
        <!--&lt;!&ndash;重试次数&ndash;&gt;-->
        <!--<property name="acquireRetryAttempts" value="2"/>-->
    <!--</bean>-->

    <!-- 动态配置数据源 -->
    <bean id="dataSource" class="cn.demo.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="ds_testmysql" key="ds_testmysql"></entry>
                <entry value-ref="ds_test" key="ds_test"></entry>
                <!--<entry value-ref="ds_mop" key="ds_mop"></entry>-->
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="ds_testmysql"></property>      <!-- 默认使用ds1的数据源 -->
    </bean>

    <!-- 多数据源配置 -->
    <bean id="ds_testmysql" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/testmysql"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>
    <bean id="ds_test" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/test"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
    </bean>


    <!--（2）配置SqlSessionFactoryBean 来自mybatis-spring-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis的全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描model包，-->
        <property name="typeAliasesPackage" value="cn.demo.model"/>
        <!--扫描sql配置文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--扫描dao接口，动态实现接口，并且注入到spring容器中
    就是xml配置文件中namespace中的接口
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出要扫描的包的地址-->
        <property name="basePackage" value="cn.demo.dao"/>
    </bean>
</beans>